
CREATE TABLE MOVIE
(
MOVIE_ID INTEGER PRIMARY KEY,
NAME VARCHAR(300) NOT NULL,
YEAR INTEGER,
AVG_TOP_CRITIC NUMERIC(3,1) NOT NULL,
NUM_TOP_CRITIC INTEGER NOT NULL,
AVG_RATING_A NUMERIC(8,5) NOT NULL,
AVG_NUM_RATINGS NUMERIC(11,5) NOT NULL,
AVG_RATING_B NUMERIC(8,5) NOT NULL
);


CREATE TABLE GENRES
(
MOVIE_ID INTEGER NOT NULL, 
GENRE VARCHAR(100) NOT NULL,
PRIMARY KEY (MOVIE_ID, GENRE),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE
);


CREATE TABLE TAG_MAP
(
TAG_ID INTEGER PRIMARY KEY,
TAG_NAME VARCHAR(200) NOT NULL
);

CREATE TABLE TAG_MOVIE_PAIR
(
MOVIE_ID INTEGER NOT NULL,
TAG_ID INTEGER NOT NULL,
WEIGHT INTEGER NOT NULL,
PRIMARY KEY(MOVIE_ID, TAG_ID),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE,
FOREIGN KEY (TAG_ID) REFERENCES TAG_MAP(TAG_ID) ON DELETE CASCADE
);

CREATE TABLE ORIGIN_COUNTRY
(
MOVIE_ID INTEGER NOT NULL,
COUNTRY VARCHAR(100),
PRIMARY KEY (MOVIE_ID),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE
);

CREATE TABLE FILM_COUNTRY
(
MOVIE_ID INTEGER NOT NULL,
COUNTRY VARCHAR(100) NOT NULL,
STATE VARCHAR(100) NOT NULL,
CITY VARCHAR(100) NOT NULL,
STREET VARCHAR(300) NOT NULL,
PRIMARY KEY (MOVIE_ID, COUNTRY, STATE, CITY, STREET),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE
);

CREATE TABLE MOVIE_ACTORS
(
MOVIE_ID INTEGER NOT NULL,
ACTOR_ID VARCHAR(100) NOT NULL,
ACTOR_NAME VARCHAR(100) NOT NULL,
RANKING INTEGER NOT NULL,
PRIMARY KEY (MOVIE_ID, ACTOR_ID),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE
);

CREATE TABLE MOVIE_DIRECTORS
(
MOVIE_ID INTEGER NOT NULL,
DIRECTOR_ID VARCHAR(100) NOT NULL,
DIRECTOR_NAME VARCHAR(100) NOT NULL,
PRIMARY KEY (MOVIE_ID, DIRECTOR_ID),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE
);

CREATE TABLE USER_RATED_MOVIES
(
USER_ID INTEGER NOT NULL,
MOVIE_ID INTEGER NOT NULL,
RATING NUMERIC(4,2) NOT NULL,
RATE_DATE DATE NOT NULL,
PRIMARY KEY (MOVIE_ID, USER_ID),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE
);

CREATE TABLE USER_RATED_TIMESTAMP
(
USER_ID INTEGER NOT NULL,
MOVIE_ID INTEGER NOT NULL,
RATING NUMERIC(4,2) NOT NULL,
TSTAMP INTEGER NOT NULL,
PRIMARY KEY (MOVIE_ID, USER_ID),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE
);


CREATE TABLE USER_TAGGED_MOVIES
(
USER_ID INTEGER NOT NULL,
MOVIE_ID INTEGER NOT NULL,
TAG_ID INTEGER NOT NULL,
RATE_DATE DATE NOT NULL,
PRIMARY KEY (MOVIE_ID, USER_ID, TAG_ID),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE,
FOREIGN KEY (TAG_ID) REFERENCES TAG_MAP(TAG_ID) ON DELETE CASCADE
);

CREATE TABLE USER_TAGGED_TIMESTAMP
(
USER_ID INTEGER NOT NULL,
MOVIE_ID INTEGER NOT NULL,
TAG_ID INTEGER NOT NULL,
TSTAMP INTEGER NOT NULL,
PRIMARY KEY (MOVIE_ID, USER_ID, TAG_ID),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE,
FOREIGN KEY (TAG_ID) REFERENCES TAG_MAP(TAG_ID) ON DELETE CASCADE
);






CREATE INDEX FILM_INDEX
ON FILM_COUNTRY(COUNTRY, MOVIE_ID);

CREATE INDEX ORIGIN_INDEX
ON ORIGIN_COUNTRY(COUNTRY, MOVIE_ID);

CREATE INDEX TAG_MOVIE_PAIR_INDEX
ON TAG_MOVIE_PAIR(TAG_ID, WEIGHT);

CREATE INDEX GENRES_INDEX
ON GENRES(GENRE, MOVIE_ID);

CREATE INDEX MOVIE_INDEX
ON MOVIE(MOVIE_ID, YEAR, CRITIC_RATING_A, CRITIC_RATING_B, NUM_RATINGS);

