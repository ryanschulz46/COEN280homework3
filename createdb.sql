CREATE TABLE MOVIE
(
MOVIE_ID INTEGER PRIMARY KEY,
NAME VARCHAR(300) NOT NULL,
YEAR INTEGER,
CRITIC_RATING NUMERIC(4,2) NOT NULL,
NUM_RATINGS INTEGER
);


CREATE TABLE GENRES
(
MOVIE_ID INTEGER NOT NULL,
GENRE VARCHAR(100) NOT NULL,
PRIMARY KEY (MOVIE_ID, GENRE),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE
);

CREATE TABLE TAG_MAP
(
TAG_ID INTEGER PRIMARY KEY,
TAG_NAME VARCHAR(200) NOT NULL
);

CREATE TABLE TAG_MOVIE_PAIR
(
MOVIE_ID INTEGER NOT NULL,
TAG_ID INTEGER NOT NULL,
WEIGHT INTEGER NOT NULL,
TAG_NAME VARCHAR(200) NOT NULL,
PRIMARY KEY(MOVIE_ID, TAG_ID),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE,
FOREIGN KEY (TAG_ID) REFERENCES TAG_MAP(TAG_ID) ON DELETE CASCADE
);

CREATE TABLE ORIGIN_COUNTRY
(
MOVIE_ID INTEGER NOT NULL,
COUNTRY VARCHAR(100),
PRIMARY KEY (MOVIE_ID),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE
);

CREATE TABLE FILM_COUNTRY
(
MOVIE_ID INTEGER NOT NULL,
COUNTRY VARCHAR(100) NOT NULL,
PRIMARY KEY (MOVIE_ID, COUNTRY),
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE(MOVIE_ID) ON DELETE CASCADE
);


SELECT DISTINCT O.COUNTRY
FROM (
SELECT G.MOVIE_ID AS ID
from GENRES G
where G.GENRE in ('Animation', 'Adventure', 'Children', 'Comedy', 'Crime', 'Mystery', 'Fantasy')
group by G.MOVIE_ID
having count(G.MOVIE_ID) = 7
	) gen, ORIGIN_COUNTRY O
WHERE O.MOVIE_ID = gen.ID;

//OR
SELECT DISTINCT user_id
FROM table
WHERE ancestry IN('England','France','Germany')

//AND
SELECT G.MOVIE_ID
from GENRES G
where G.GENRE in ('Animation', 'Adventure', 'Children', 'Comedy', 'Crime', 'Mystery', 'Fantasy')
group by G.MOVIE_ID
having count(G.MOVIE_ID) = 4;

SELECT G.GENRE
FROM GENRES G
WHERE G.GENRE = 'Adventure' AND G.GENRE = 'Animation' AND G.GENRE = 'Children' AND G.GENRE = 'Comedy' AND G.GENRE = 'Fantasy'
GROUP BY G.GENRE;
